from django.conf.urls.defaults import *
from www.vulture.models import *

urlpatterns = patterns('',
        (r'^/?$',                               'vulture.views.logon'),
        (r'^logon/$',                           'vulture.views.logon'),
        (r'^app/$',                             'vulture.views.vulture_object_list',          dict({'queryset': App.objects.all()}, allow_empty=1)),
        (r'^app/(?P<object_id>\d+)/$',          'vulture.views.update_app'),
        (r'^app/(?P<object_id>\d+)/switch/$',   'vulture.views.switch_app'),
        (r'^app/new/$',                         'vulture.views.vulture_create_object',        dict({'model': App}, post_save_redirect='/app/%(id)s/')),
        (r'^app/(?P<object_id>\d+)/del/$',      'vulture.views.vulture_delete_object',        dict({'model': App}, post_delete_redirect='/app/')),
        (r'^user/$',                            'vulture.views.vulture_object_list',          dict({'queryset': User.objects.all()}, allow_empty=1)),
        (r'^user/(?P<object_id>\d+)/$',         'vulture.views.update_user'),
        (r'^user/new/$',                        'vulture.views.create_user'),
        (r'^user/(?P<object_id>\d+)/del/$',     'vulture.views.vulture_delete_object',        dict({'model': User}, post_delete_redirect='/user/')),
        (r'^intf/$',                            'vulture.views.vulture_object_list',          dict({'queryset': Intf.objects.all()}, allow_empty=1)),
        (r'^intf/(?P<object_id>\d+)/$',         'vulture.views.vulture_update_object',        {'model': Intf}),
        (r'^intf/new/$',                        'vulture.views.vulture_create_object',        {'model': Intf}),
        (r'^intf/(?P<object_id>\d+)/del/$',     'vulture.views.vulture_delete_object',        dict({'model': Intf}, post_delete_redirect='/intf/')),
        (r'^intf/(?P<intf_id>\d+)/start/$',     'vulture.views.start'),
        (r'^intf/(?P<intf_id>\d+)/stop/$',      'vulture.views.stop'),
        (r'^intf/(?P<intf_id>\d+)/reload/$',    'vulture.views.reload'),
        (r'^sql/$',                             'vulture.views.vulture_object_list',          dict({'queryset': SQL.objects.all()}, allow_empty=1)),
        (r'^sql/(?P<object_id>\d+)/$',          'vulture.views.update_sql'),
        (r'^sql/new/$',                         'vulture.views.create_sql'),
        (r'^sql/(?P<object_id>\d+)/del/$',      'vulture.views.delete_auth',                  dict({'model': SQL}, post_delete_redirect='/sql/')),
        (r'^ldap/$',                            'vulture.views.vulture_object_list',          dict({'queryset': LDAP.objects.all()}, allow_empty=1)),
        (r'^ldap/(?P<object_id>\d+)/$',         'vulture.views.update_ldap'),
        (r'^ldap/new/$',                        'vulture.views.create_ldap'),
        (r'^ldap/(?P<object_id>\d+)/del/$',     'vulture.views.delete_auth',                  dict({'model': LDAP}, post_delete_redirect='/ldap/')),
        (r'^ssl/$',                             'vulture.views.vulture_object_list',          dict({'queryset': SSL.objects.all()}, allow_empty=1)),
        (r'^ssl/(?P<object_id>\d+)/$',          'vulture.views.update_ssl'),
        (r'^ssl/new/$',                         'vulture.views.create_ssl'),
        (r'^ssl/(?P<object_id>\d+)/del/$',      'vulture.views.delete_auth',                  dict({'model': SSL}, post_delete_redirect='/ssl/')),
        (r'^mod_log/$',                         'vulture.views.vulture_object_list',          dict({'queryset': Log.objects.all()}, allow_empty=1)),
        (r'^mod_log/(?P<object_id>\d+)/$',      'vulture.views.vulture_update_object',        {'model': Log}),
        (r'^mod_log/new/$',                     'vulture.views.vulture_create_object',        {'model': Log}),
        (r'^mod_log/(?P<object_id>\d+)/del/$',  'vulture.views.vulture_delete_object',        dict({'model': Log}, post_delete_redirect='/mod_log/')),
        (r'^acl/$',                             'vulture.views.vulture_object_list',          dict({'queryset': ACL.objects.all()}, allow_empty=1)),
        (r'^acl/(?P<object_id>\d+)/$',          'vulture.views.update_acl'),
        (r'^acl/new/$',                         'vulture.views.create_acl'),
        (r'^pki/dump/$',                        'vulture.views.list_cert_dump'),
        (r'^pki/profile/dump/$',                'vulture.views.ca_dump'),
        (r'^pki/$',                             'vulture.views.list_cert'),
        (r'^pki/(?P<page_id>\d+)/$',            'vulture.views.list_cert_page'),
        (r'^pki/new/$',                         'vulture.views.create_cert'),
        (r'^pki/(?P<object_id>\d+)/edit/$',     'vulture.views.update_cert'),
        (r'^pki/(?P<object_id>\d+)/revoke/$',   'vulture.views.revoke'),
        (r'^pki/(?P<object_id>\d+)/download/$', 'vulture.views.download_p12'),
        (r'^pki/(?P<object_id>\d+)/send/$',     'vulture.views.send_p12'),
        (r'^pki/profile/$',                     'vulture.views.vulture_object_list',          dict({'queryset': CertProfile.objects.all()}, allow_empty=1)),
        (r'^pki/profile/(?P<object_id>\d+)/$',  'vulture.views.vulture_update_object',        {'model': CertProfile}),
        (r'^pki/profile/new/$',                 'vulture.views.vulture_create_object',        {'model': CertProfile}),
        (r'^pki/profile/(?P<object_id>\d+)/del/$','vulture.views.vulture_delete_object',      dict({'model': CertProfile}, post_delete_redirect='/pki/profile/')),
        (r'^acl/(?P<object_id>\d+)/del/$',      'vulture.views.delete_auth',                  dict({'model': ACL}, post_delete_redirect='/acl/')),
        (r'^img/(.*)$',                         'django.views.static.serve',                  {'document_root': 'img'}),
        (r'^css/(.*)$',                         'django.views.static.serve',                  {'document_root': 'css'}),
)
